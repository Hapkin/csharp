<Window x:Class="TestWPF.View.WenskaartView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TestWPF"
        xmlns:model="clr-namespace:TestWPF.Model"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:global="clr-namespace:System.Globalization;assembly=mscorlib"       
        
        xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
        mc:Ignorable="d"
        Title="Wenskaarten" Height="550" Width="750"


        >

    <i:Interaction.Triggers>

        <!--closing event-->
        <i:EventTrigger EventName="Closing">
            <cmd:EventToCommand Command="{Binding OnClosingCommand}" />
            <!-- PassEventArgsToCommand="True" -->
        </i:EventTrigger>
    </i:Interaction.Triggers>


    <Window.InputBindings>
        <KeyBinding 
            Command="{Binding NieuwCommand}"
            Gesture="CTRL+N" />
        <KeyBinding 
            Command="{Binding OpenenCommand}"
            Gesture="CTRL+O" />
        <KeyBinding 
            Command="{Binding OpslaanCommand}"
            Gesture="CTRL+S" />
        <KeyBinding 
            Command="{Binding AfdrukvoorbeeldCommand}"
            Gesture="CTRL+F2" />
    </Window.InputBindings>
    <Window.Resources>
        <Style TargetType="{x:Type Ellipse}">
            <Setter Property="Height" Value="20"></Setter>
            <Setter Property="Width" Value="20"></Setter>
            <Setter Property="Stroke" Value="Black"></Setter>
            <Setter Property="StrokeThickness" Value="1"></Setter>
        </Style>
        <!--<model:StatusConverter x:Key="statusConvert" />-->
    </Window.Resources>
    <DockPanel>

        <!--MENU-->
        <Menu Height="24" Name="MenuBalk" DockPanel.Dock="Top">
            <MenuItem Header="Bestand">

                <MenuItem Header="Nieuw"
                          Command="{Binding NieuwCommand}"
                          InputGestureText="Ctrl+N" />
                <MenuItem Header="Openen"
                          Command="{Binding OpenenCommand}"
                          InputGestureText="Ctrl+O" />
                <MenuItem Header="Opslaan"
                          Command="{Binding OpslaanCommand}"
                          IsEnabled="{Binding IsEnabled}"
                          InputGestureText="Ctrl+S" />
                <MenuItem Header="Afdrukvoorbeeld"
                          Command="{Binding AfdrukvoorbeeldCommand}"
                          IsEnabled="{Binding IsEnabled}"
                          InputGestureText="Ctrl+F2" />
                <Separator />

                <MenuItem Header="Afsluiten" Command="{Binding AfsluitenCommand}"></MenuItem>

            </MenuItem>
            <MenuItem Header="Kaarten">
                <MenuItem Header="Kerstkaart" Command="{Binding KerstkaartCommand}"></MenuItem>
                <MenuItem Header="Geboortekaart" Command="{Binding GeboortekaartCommand}"></MenuItem>
            </MenuItem>
        </Menu>



        <!--BOTTOMBAR-->

        <StatusBar DockPanel.Dock="Bottom" Height="24">
            <StatusBarItem
                Name="Status" 
                DockPanel.Dock="Left" 
                HorizontalContentAlignment="Left" 
                HorizontalAlignment="Left"
                Content="{Binding MijnStatus}"
                >
                <!-- Content="{Binding Path=statusConvert}" 
                "{Binding IsQuoted, 
                     Converter={StaticResource AlwaysVisibleConverter}, 
                     FallbackValue=Collapsed}"-->


            </StatusBarItem>

        </StatusBar>


        <!--INHOUD-->
        <Grid Visibility="{Binding Path=Zichtbaar}">

            <Grid.RowDefinitions>
                <RowDefinition Height="400"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="500"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <!-- de kaart! -->
            <Grid Grid.Column="0"
                  Grid.Row="0"
                  
                >
                <Grid.Background>
                    <ImageBrush ImageSource="{Binding MijnKaart.Achtergrond.Img}"/>
                </Grid.Background>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <!--<Label Content="{Binding MijnKaart.Achtergrond.Naam}"></Label>-->
                <!--<ItemsControl Name="DropZone" ItemsSource="{Binding BallenLijst}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas IsItemsHost="True" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Ellipse Fill="{Binding Kleur.Borstel, Mode=OneWay}" Canvas.Left="{Binding X, Mode=TwoWay}" Canvas.Top="{Binding X, Mode=TwoWay}">
                                -->
                <!--<i:Interaction.Behaviors>
                                    <local:DragBehavior/>
                                </i:Interaction.Behaviors>-->
                <!--<i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonUp">
                                        <i:InvokeCommandAction Command="{Binding ElementName=border,Path=DataContext.MouseLeftButtonUpCommand}" CommandParameter="{Binding}" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                        <i:InvokeCommandAction Command="{Binding ElementName=border,Path=DataContext.MouseLeftButtonDownCommand}" CommandParameter="{Binding}" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseMove">
                                        <i:InvokeCommandAction Command="{Binding ElementName=border,Path=DataContext.MouseMoveCommand}" CommandParameter="{Binding}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>-->
                <!--
                            </Ellipse>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="Canvas.Top" Value="{Binding Path=X, Mode=TwoWay}" />
                            <Setter Property="Canvas.Left" Value="{Binding Path=Y, Mode=TwoWay}" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                </ItemsControl>-->
                <!-- ************* -->
                <ListBox ItemsSource="{Binding BallenLijst}"
                         ItemsPanel="{DynamicResource ItemsPanelTemplate1}"
                         ItemContainerStyle="{DynamicResource ListBoxItemStyle1}"
                         Background="Transparent"
                         >
                    <!--<ListBox.ItemTemplate>
                        <DataTemplate>
                            <Ellipse Fill="Aqua"></Ellipse>
                        </DataTemplate>
                    </ListBox.ItemTemplate>-->
                    <ListBox.Resources>
                        <ItemsPanelTemplate x:Key="ItemsPanelTemplate1">
                            <Canvas IsItemsHost="True"/>
                        </ItemsPanelTemplate>


                        <Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="Canvas.Left" Value="{Binding X}"/>
                            <Setter Property="Canvas.Top" Value="{Binding Y}"/>
                            <Setter Property="Background" Value="{Binding Kleur.Borstel}" />
                            <Setter Property="Tag" 
                                    Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type Canvas}}}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Border 
                                            SnapsToDevicePixels="true"
                                            Background="{TemplateBinding Background}" >
                                            <!--BorderBrush="{TemplateBinding BorderBrush}" 
                                            BorderThickness="{TemplateBinding BorderThickness}" 
                                            Padding="{TemplateBinding Padding}" 
                                            >-->
                                            <ContentPresenter 
                                                
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            <!--HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>-->
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.Resources>
                </ListBox>




                <ItemsControl 
                    Name="DropZone" 
                    ItemsSource="{Binding MijnKaart.Ballen, UpdateSourceTrigger=PropertyChanged}"
                    Background="Transparent"                    
                    >
                    <!-- ITEMS panel-->
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas 
                                Name="KaartCanvas"
                                IsItemsHost="True"
                                AllowDrop="True"
                                Background="Transparent"
                                DragDrop.Drop="Ellipse_Drop"
                                >
                                <!-- nog een nieuwe sleepmethode maken -->
                            </Canvas>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <!-- ContainerStyle! -->
                    <ItemsControl.ItemContainerStyle>
                        <Style TargetType="ContentPresenter">
                            <Setter Property="Canvas.Top" Value="{Binding Path=Y}" />
                            <Setter Property="Canvas.Left" Value="{Binding Path=X}" />
                        </Style>
                    </ItemsControl.ItemContainerStyle>
                    <!-- ITEM! panel-->
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <ItemsControl ItemsSource="{Binding Value}">
                                <!-- Item source wordt bal! uit de Ballenlijst-->
                                <Ellipse Stroke="Black" StrokeThickness="1" Height="20" Width="20" Fill="{Binding Kleur.Borstel}" />
                            </ItemsControl>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <!-- ****** -->
            </Grid>
            <!-- TextBox Wens -->
            <TextBox 
                Grid.Column="0" Grid.Row="1"
                Width="200"  
                VerticalAlignment="Center"
                HorizontalAlignment="Center"
                FontFamily="{Binding SelectedFont}"
                FontSize="{Binding FontSize}"
                Text="{Binding WensText, Mode=TwoWay}"
                >
                <!-- width automatisch aanpassen -->


            </TextBox>
            <!-- Rechterzijde -->
            <Grid Grid.Column="1" Grid.RowSpan="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <!-- Bal -->
                <TextBlock Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Label>Kleur van de bal</Label> 
                    <LineBreak/>

                    <ComboBox 
                        Name="comboBoxKleuren" 
                        Margin="10,10" 
                        Width="120"
                        ItemsSource="{Binding lColors}" 
                        DisplayMemberPath="Naam"
                        SelectedItem="{Binding SelectedColor}"
                        >
                    </ComboBox> 
                    <LineBreak/>
                    <!-- *** Fill="Yellow" AllowDrop="True" MouseMove="Rectangle_MouseMove" DragEnter="Rectangle_DragEnter" DragLeave="Rectangle_DragLeave" Drop="Rectangle_Drop"-->
                    <Ellipse Fill="{Binding SelectedColor.Borstel}" 
                             Stroke="Black"
                             />
                </TextBlock>

                <!-- vuilbak -->
                <TextBlock Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Label>Vuilbak:</Label>

                </TextBlock>

                <!-- Wens Opmaak -->
                <Grid Grid.Row="2" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="2*"/>
                    </Grid.RowDefinitions>
                    <Label Grid.Row="0">Lettertype:</Label>
                    <ComboBox 
                        Grid.Row="1"
                        ItemsSource="{Binding lFonts}" 
                        SelectedItem="{Binding SelectedFont}" 
                        />
                    <TextBlock Grid.Row="2">
                        <Label>Grootte: </Label> 
                        <Label Content="{Binding FontSize, Mode=TwoWay}"></Label>
                        <RepeatButton Command="{Binding FontSizePlusCommand}">+</RepeatButton>
                        <RepeatButton Command="{Binding FontSizeMinCommand}">-</RepeatButton>
                    </TextBlock>

                </Grid>

            </Grid>
        </Grid>
    </DockPanel>

</Window>
